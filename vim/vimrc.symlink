set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
" call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

" Syntax and language improvements
Plugin 'jelera/vim-javascript-syntax'
" Plugin 'pangloss/vim-javascript'
Plugin 'othree/yajs.vim'
Plugin 'nathanaelkane/vim-indent-guides'
Plugin 'Raimondi/delimitMate'
Plugin 'scrooloose/syntastic'
Plugin 'mattn/emmet-vim'
Plugin 'geoffharcourt/vim-matchit'
Plugin 'jiangmiao/auto-pairs'
Plugin 'editorconfig/editorconfig-vim'

" React Syntax highlighting and indenting Support
Plugin 'mxw/vim-jsx'

" Ruby Stuff
Plugin 'thoughtbot/vim-rspec'

" Color Scheme
Plugin 'tomasr/molokai'

" Navigation
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'scrooloose/nerdtree'
Plugin 'rking/ag.vim'

" Git integration
Plugin 'tpope/vim-fugitive'

" Close buffer without close the window
Plugin 'moll/vim-bbye'

" JSDoc integration
Plugin 'heavenshell/vim-jsdoc'

" Multiple Cursors
Plugin 'terryma/vim-multiple-cursors'

" Markdown preview
" npm -g install instant-markdown-d
Plugin 'suan/vim-instant-markdown'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
" filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ


" Put your non-Plugin stuff after this line

" Define the map leader key
let mapleader = ","

" Swap file path
set swapfile
set dir=~/.tmp

" Clipboard
set clipboard=unnamed

" Colors
set t_Co=256
colorscheme molokai

set background=dark

" Deactivate cursor keys
nnoremap <up> <nop>
nnoremap <down> <nop>
nnoremap <left> <nop>
nnoremap <right> <nop>
inoremap <up> <nop>
inoremap <down> <nop>
inoremap <left> <nop>
inoremap <right> <nop>
nnoremap j gj
nnoremap k gk

" Hide mouse when typing
set mouse=a
set mousehide

" Search configuration
set incsearch
set hlsearch
set ignorecase
set smartcase
set showmatch
set matchtime=2 " How many tenths of a second to blink
nnoremap <silent> <leader><space> :nohlsearch<CR>

" Switch syntax highlighting on
syntax on

" Show line numbers
set number

" Paste toggle
set pastetoggle=<F2>

" ctrlp.vim
let g:ctrlp_dont_split = "NERD_tree_2"
let g:ctrlp_working_path_mode = 'ra'
let g:ctrlp_jump_to_buffer = 0
let g:ctrlp_match_window_reversed = 1
let g:ctrlp_split_window = 0
let g:ctrlp_max_height = 20
let g:ctrlp_max_depth = 40
let g:ctrlp_extensions = ['tag']
let g:ctrlp_max_files=10000
let g:cssColorVimDoNotMessMyUpdatetime = 1

let g:ctrlp_custom_ignore = '\v[\/](node_modules|target|dist)|(\.(swp|ico|git|svn))$'
let s:ctrlp_fallback = 'ag %s
      \ --nocolor --nogroup --depth 5
      \ --hidden --follow --smart-case
      \ --ignore .bazaar
      \ --ignore .bzr
      \ --ignore .git
      \ --ignore .hg
      \ --ignore .svn
      \ --ignore .ccache
      \ --ignore .DS_Store
      \ --ignore .opt1
      \ --ignore .pylint.d
      \ --ignore .shell
      \ --ignore .wine
      \ --ignore .wine-pipelight
      \ --ignore "**/*.pyc"
      \ --ignore "**/*.class"
      \ --ignore "**/*.o"
      \ -g ""'

let g:ctrlp_user_command = {
    \ 'types': {
      \ 1: ['.git', 'cd %s && git ls-files . --cached --others --exclude-standard'],
      \ 2: ['.hg', 'hg --cwd %s locate -I .'],
    \ },
    \ 'fallback': s:ctrlp_fallback
\ }

" Indentation
set autoindent
set smartindent
set smarttab
set shiftwidth=2
set softtabstop=2
set tabstop=2
set expandtab
set wrap

" Strip trailing whitespace
nnoremap <leader>W :%s/\s\+$//<cr>:let @/=''<CR>

" Close Buffer without close window moll/vim-bbye
nnoremap <leader>q :Bdelete<CR>

" git commit messages
autocmd Filetype gitcommit setlocal spell textwidth=72

"highlight OverLength ctermbg=red ctermfg=white guibg=#592929
" match OverLength /\%70v.\+/

" Nerd Tree
let NERDTreeShowHidden=1
let NERDTreeIgnore=['.DS_Store']
" Show NERDTree
nmap <leader>ne :NERDTree<cr>
" Show file in NERDTree
nmap <leader>nf :NERDTreeFind<cr>

" Syntastic
let g:syntastic_enable_signs=1
let g:syntastic_error_symbol='✗'
let g:syntastic_warning_symbol='⚠'
let g:syntastic_mode_map = { 'mode': 'active',
                           \ 'active_filetypes': [],
                           \ 'passive_filetypes': [] }
let g:syntastic_check_on_wq = 1
let g:syntastic_always_populate_loc_list=1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 0
let g:syntastic_javascript_checkers = ['eslint']
let g:syntastic_scss_checkers = ['scss_lint']
let g:syntastic_javascript_eslint_exec = 'eslint_d'
let g:syntastic_ruby_checkers = ['rubocop']
let g:syntastic_ruby_rubocop_exec = 'rubocop'
let g:syntastic_html_checkers=['']
" let g:syntastic_quiet_messages={'level':'warnings'}

nnoremap <leader>s :lclose<cr>

" Emmet
let g:user_emmet_leader_key='<tab>'
let g:user_emmet_install_global = 0
let g:user_emmet_settings = {
\  'javascript.jsx' : {
\      'extends' : 'jsx',
\  },
\}

autocmd FileType html,css,javascript.jsx EmmetInstall

" CSS Complete
" https://github.com/csexton/snipmate.vim
autocmd FileType css set omnifunc=csscomplete#CompleteCSS
autocmd BufNewFile,BufRead *.scss set ft=scss.css
inoremap <leader>, <C-x><C-o>

" Allow highlighting in js files
let g:jsx_ext_required = 0

" Ag configuration
nnoremap <leader>/ :Ag 

" map esc key to jj
:imap jj <Esc>

" RSpec.vim mappings
let g:rspec_command = "!bundle exec rspec --format documentation {spec}"
map <Leader>t :call RunCurrentSpecFile()<CR>
map <Leader>s :call RunNearestSpec()<CR>
map <Leader>l :call RunLastSpec()<CR>
map <Leader>a :call RunAllSpecs()<CR>

"Powerline Support
set rtp+=/usr/local/lib/python2.7/site-packages/powerline/bindings/vim
set laststatus=2
